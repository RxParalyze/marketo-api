{
    "swagger": "2.0",
    "info": {
      "description": "Marketo Rest API",
      "version": "1.0",
      "title": "Marketo Rest API",
      "termsOfService": "https://www.marketo.com/company/legal/",
      "contact": {
        "name": "Marketo Developer Relations",
        "url": "http://developers.marketo.com",
        "email": "developerfeedback@marketo.com"
      },
      "license": {
        "name": "API License Agreement",
        "url": "http://developers.marketo.com/api-license/"
      }
    },
    "host": "075-WYV-623.mktorest.com",
    "basePath": "/",
    "schemes": [
      "https"
    ],
    "tags": [
      {
        "name": "Authentication",
        "description": "OAuth Authentication Token Marketo API",
        "externalDocs": {
          "description": "OAuth Authentication Documentation",
          "url": "https://developers.marketo.com/rest-api/endpoint-reference/authentication-endpoint-reference/"
        }
      },
      {
        "name": "Bulk Export Activities",
        "description": "Bulk Export Activities Controller",
        "externalDocs": {
          "description": "Bulk Extract Documentation",
          "url": "https://developers.marketo.com/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Bulk_Export_Activities"
        }
      },
      {
        "name": "Bulk Export Leads",
        "description": "Bulk Export Leads Controller",
        "externalDocs": {
          "description": "Bulk Extract Documentation",
          "url": "https://developers.marketo.com/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Bulk_Export_Leads"
        }
      },
      {
        "name": "Bulk Export Program Members",
        "description": "Bulk Export Program Members Controller",
        "externalDocs": {
          "description": "Bulk Extract Documentation",
          "url": "https://developers.marketo.com/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Bulk_Export_Program_Members"
        }
      },
      {
        "name": "Bulk Export Custom Objects",
        "description": "Bulk Export Custom Objects Controller",
        "externalDocs": {
          "description": "Bulk Extract Documentation",
          "url": "https://developers.marketo.com/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Bulk_Export_Custom_Objects"
        }
      }
    ],
    "paths": {
      "/identity/oauth/token": {
        "get": {
          "tags": [
            "Authentication"
          ],
          "summary": "Request an Authentication Token",
          "description": "Retrieve an access token from Marketo. Calls to this endpoint are not counted towards API call limit.",
          "operationId": "requestAuthenticationToken",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "client_id",
              "description": "Client_ID",
              "required": true,
              "schema": "string"
            },
            {
              "in": "query",
              "name": "client_secret",
              "description": "Client_Secret",
              "required": true,
              "schema": "string"
            },
            {
              "in": "query",
              "name": "grant_type",
              "description": "Grant_Type",
              "required": true,
              "schema": {
                "type": "string",
                "example": "client_credentials"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation"
            },
            "400": {
              "description": "Invalid status value"
            }
          },
          "security": [
            {
              "marketo_auth": [
                "read:job"
              ]
            }
          ]
        }
      },
      "/bulk/v1/activities/export.json": {
        "get": {
          "tags": [
            "Bulk Export Activities"
          ],
          "summary": "Get Export Activity Jobs",
          "description": "Returns a list of export jobs that were created in the past 7 days.  Required Permissions: Read-Only Activity",
          "operationId": "getExportActivitiesUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "Comma separated list of statuses to filter on.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "enum": [
                "created",
                "queued",
                "processing",
                "cancelled",
                "completed",
                "failed"
              ]
            },
            {
              "name": "batchSize",
              "in": "query",
              "description": "The batch size to return. The max and default value is 300.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "nextPageToken",
              "in": "query",
              "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info.",
              "required": false,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponseWithToken"
              }
            }
          }
        }
      },
      "/bulk/v1/activities/export/create.json": {
        "post": {
          "tags": [
            "Bulk Export Activities"
          ],
          "summary": "Create Export Activity Job - Step 1",
          "description": "Create export job for search criteria defined via \"filter\" parameter.  Request returns the \"exportId\" which is passed as a parameter in subsequent calls to Bulk Export Activities endpoints.  Use Enqueue Export Activity Job endpoint to queue the export job for processing.  Use Get Export Activity Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Activity",
          "operationId": "createExportActivitiesUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "exportActivityRequest",
              "description": "exportActivityRequest<br><br>ColumnHeaderNames: A JSON object containing key-value pairs of field and column header names.<br><br>Example:<br><code>\"columnHeaderNames\":{<br>  \"primaryAttributeValueId\":\"Attribute ID\",<br>  \"primaryAttributeValue\":\"Attribute Value\",<br>  \"attributes\":\"Secondary Attributes\"<br>}</code><br>",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ExportActivityRequest"
              }
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/activities/export/{exportId}/cancel.json": {
        "post": {
          "tags": [
            "Bulk Export Activities"
          ],
          "summary": "Cancel Export Activity Job",
          "description": "Cancel export job.  Required Permissions: Read-Only Activity",
          "operationId": "cancelExportActivitiesUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/activities/export/{exportId}/enqueue.json": {
        "post": {
          "tags": [
            "Bulk Export Activities"
          ],
          "summary": "Enqueue Export Activity Job - Step 2",
          "description": "Enqueue export job. This will place export job in queue, and will start the job when computing resources become available.  The export job must be in \"Created\" state.  Use Get Export Activity Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Activity",
          "operationId": "enqueueExportActivitiesUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/activities/export/{exportId}/file.json": {
        "get": {
          "tags": [
            "Bulk Export Activities"
          ],
          "summary": "Get Export Activity File - Step 3",
          "description": "Returns the file content of an export job.  The export job must be in \"Completed\" state.  Use Get Export Activity Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Activity<br><br>The file format is specified by calling the Create Export Activity Job endpoint. The following is an example of the default file format (\"CSV\"). Note that the \"attributes\" field is formatted as JSON.<br><br><code>marketoGUID,leadId,activityDate,activityTypeId,campaignId,primaryAttributeValueId,primaryAttributeValue, attributes</code><br><code>122323,6,2013-09-26T06:56:35+0000,12,11,6,Owyliphys Iledil,[{\"name\":\"Source Type\",\"value\":\"Web page visit\"}]</code>",
          "operationId": "getExportActivitiesFileUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "Range",
              "in": "header",
              "description": "To support partial retrieval of extracted data, the HTTP header \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval Requests\" for more information. If the header is not set, the entire contents will be returned.",
              "required": false,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ObservableOfInputStreamRangeContent"
              }
            }
          }
        }
      },
      "/bulk/v1/activities/export/{exportId}/status.json": {
        "get": {
          "tags": [
            "Bulk Export Activities"
          ],
          "summary": "Get Export Activity Job Status - Step 2.1 (optional)",
          "description": "Returns status of an export job.  Job status is available for 30 days after Completed or Failed status was reached. Required Permissions: Read-Only Activity",
          "operationId": "getExportActivitiesStatusUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/leads/export.json": {
        "get": {
          "tags": [
            "Bulk Export Leads"
          ],
          "summary": "Get Export Lead Jobs",
          "description": "Returns a list of export jobs that were created in the past 7 days.  Required Permissions: Read-Only Lead",
          "operationId": "getExportLeadsUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "Comma separated list of statuses to filter on.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "enum": [
                "created",
                "queued",
                "processing",
                "cancelled",
                "completed",
                "failed"
              ]
            },
            {
              "name": "batchSize",
              "in": "query",
              "description": "The batch size to return. The max and default value is 300.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "nextPageToken",
              "in": "query",
              "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info.",
              "required": false,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponseWithToken"
              }
            }
          }
        }
      },
      "/bulk/v1/leads/export/create.json": {
        "post": {
          "tags": [
            "Bulk Export Leads"
          ],
          "summary": "Create Export Lead Job - Step 1",
          "description": "Create export job for search criteria defined via \"filter\" parameter.  Request returns the \"exportId\" which is passed as a parameter in subsequent calls to Bulk Export Leads endpoints.  Use Enqueue Export Lead Job endpoint to queue the export job for processing.  Use Get Export Lead Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead",
          "operationId": "createExportLeadsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "exportLeadRequest",
              "description": "exportLeadRequest<br><br>ColumnHeaderNames: A JSON object containing key-value pairs of field and column header names.<br><br>Example:<br><code>\"columnHeaderNames\":{<br>  \"firstName\":\"First Name\",<br>  \"lastName\":\"Last Name\",<br>  \"email\":\"Email Address\"<br>}</code><br>",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ExportLeadRequest"
              }
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/leads/export/{exportId}/cancel.json": {
        "post": {
          "tags": [
            "Bulk Export Leads"
          ],
          "summary": "Cancel Export Lead Job",
          "description": "Cancel export job.  Required Permissions: Read-Only Lead",
          "operationId": "cancelExportLeadsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/leads/export/{exportId}/enqueue.json": {
        "post": {
          "tags": [
            "Bulk Export Leads"
          ],
          "summary": "Enqueue Export Lead Job - Step 2",
          "description": "Enqueue export job. This will place export job in queue, and will start the job when computing resources become available.  The export job must be in \"Created\" state.  Use Get Export Lead Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead",
          "operationId": "enqueueExportLeadsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/leads/export/{exportId}/file.json": {
        "get": {
          "tags": [
            "Bulk Export Leads"
          ],
          "summary": "Get Export Lead File - Step 3",
          "description": "Returns the file content of an export job.  The export job must be in \"Completed\" state.  Use Get Export Lead Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead<br><br>The file format is specified by calling the Create Export Lead Job endpoint. The following is an example of the default file format (\"CSV\").<br><br><code>firstName,lastName,email</code><br><code>Marvin,Gaye,marvin.gaye@motown.com</code>",
          "operationId": "getExportLeadsFileUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "Range",
              "in": "header",
              "description": "To support partial retrieval of extracted data, the HTTP header \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval Requests\" for more information. If the header is not set, the entire contents will be returned.",
              "required": false,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ObservableOfInputStreamRangeContent"
              }
            }
          }
        }
      },
      "/bulk/v1/leads/export/{exportId}/status.json": {
        "get": {
          "tags": [
            "Bulk Export Leads"
          ],
          "summary": "Get Export Lead Job Status - Step 2.1 (optional)",
          "description": "Returns status of an export job.  Job status is available for 30 days after Completed or Failed status was reached. Required Permissions: Read-Only Lead",
          "operationId": "getExportLeadsStatusUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/customobjects/{apiName}/export.json": {
        "get": {
          "tags": [
            "Bulk Export Custom Objects"
          ],
          "summary": "Get Export Custom Object Jobs",
          "description": "Returns a list of export jobs that were created in the past 7 days.  Required Permissions: Read-Only Custom Object",
          "operationId": "getExportCustomObjectsUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "apiName",
              "in": "path",
              "description": "API Name of the custom object for the export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "status",
              "in": "query",
              "description": "Comma separated list of statuses to filter on.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "enum": [
                "created",
                "queued",
                "processing",
                "cancelled",
                "completed",
                "failed"
              ]
            },
            {
              "name": "batchSize",
              "in": "query",
              "description": "The batch size to return. The max and default value is 300.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "nextPageToken",
              "in": "query",
              "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info.",
              "required": false,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponseWithToken"
              }
            }
          }
        }
      },
      "/bulk/v1/customobjects/{apiName}/export/create.json": {
        "post": {
          "tags": [
            "Bulk Export Custom Objects"
          ],
          "summary": "Create Export Custom Object Job - Step 1",
          "description": "Create export job for search criteria defined via \"filter\" parameter.  Request returns the \"exportId\" which is passed as a parameter in subsequent calls to Bulk Export Custom Object endpoints.  Use Enqueue Export Custom Object Job endpoint to queue the export job for processing.  Use Get Export Custom Object Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Custom Object",
          "operationId": "createExportCustomObjectsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "apiName",
              "in": "path",
              "description": "API Name of the custom object for the export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "exportCustomObjectRequest",
              "description": "exportCustomObjectRequest<br><br>ColumnHeaderNames: A JSON object containing key-value pairs of custom object attributes and column header names.<br><br>Example:<br><code>\"columnHeaderNames\":{<br>  \"attrName1\":\"value1\",<br>  \"attrName2\":\"value2\",<br>  \"attrName3\":\"value3\"<br>}</code><br>",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ExportCustomObjectRequest"
              }
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/customobjects/{apiName}/export/{exportId}/cancel.json": {
        "post": {
          "tags": [
            "Bulk Export Custom Objects"
          ],
          "summary": "Cancel Export Custom Object Job",
          "description": "Cancel export job.  Required Permissions: Read-Only Custom Object",
          "operationId": "cancelExportCustomObjectsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "apiName",
              "in": "path",
              "description": "API Name of the custom object for the export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/customobjects/{apiName}/export/{exportId}/enqueue.json": {
        "post": {
          "tags": [
            "Bulk Export Custom Objects"
          ],
          "summary": "Enqueue Export Custom Object Job - Step 2",
          "description": "Enqueue export job. This will place export job in queue, and will start the job when computing resources become available.  The export job must be in \"Created\" state.  Use Get Export Custom Object Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Custom Object",
          "operationId": "enqueueExportCustomObjectsUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "apiName",
              "in": "path",
              "description": "API Name of the custom object for the export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/customobjects/{apiName}/export/{exportId}/file.json": {
        "get": {
          "tags": [
            "Bulk Export Custom Objects"
          ],
          "summary": "Get Export Custom Object File - Step 3",
          "description": "Returns the file content of an export job.  The export job must be in \"Completed\" state.  Use Get Export Custom Object Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Custom Object<br><br>The file format is specified by calling the Create Export Custom Object Job endpoint. The following is an example of the default file format (\"CSV\").<br><br><code>leadId,marketoGUID,itemName</code><br><code>11,c93f0494-bbd9-44e8-9c0e-dae9b525073f,Hoka One One Mach 4</code>",
          "operationId": "getExportCustomObjectsFileUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "apiName",
              "in": "path",
              "description": "API Name of the custom object for the export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "Range",
              "in": "header",
              "description": "To support partial retrieval of extracted data, the HTTP header \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval Requests\" for more information. If the header is not set, the entire contents will be returned.",
              "required": false,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ObservableOfInputStreamRangeContent"
              }
            }
          }
        }
      },
      "/bulk/v1/customobjects/{apiName}/export/{exportId}/status.json": {
        "get": {
          "tags": [
            "Bulk Export Custom Objects"
          ],
          "summary": "Get Export Custom Object Job Status - Step 2.1 (optional)",
          "description": "Returns status of an export job.  Job status is available for 30 days after Completed or Failed status was reached. Required Permissions: Read-Only Custom Object",
          "operationId": "getExportCustomObjectsStatusUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "apiName",
              "in": "path",
              "description": "API Name of the custom object for the export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/program/members/export.json": {
        "get": {
          "tags": [
            "Bulk Export Program Members"
          ],
          "summary": "Get Export Program Member Jobs",
          "description": "Returns a list of export jobs that were created in the past 7 days.  Required Permissions: Read-Only Lead",
          "operationId": "getExportProgramMembersUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "Comma separated list of statuses to filter on.",
              "required": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi",
              "enum": [
                "created",
                "queued",
                "processing",
                "cancelled",
                "completed",
                "failed"
              ]
            },
            {
              "name": "batchSize",
              "in": "query",
              "description": "The batch size to return. The max and default value is 300.",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "nextPageToken",
              "in": "query",
              "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info.",
              "required": false,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponseWithToken"
              }
            }
          }
        }
      },
      "/bulk/v1/program/members/export/create.json": {
        "post": {
          "tags": [
            "Bulk Export Program Members"
          ],
          "summary": "Create Export Program Member Job - Step 1",
          "description": "Create export job for search criteria defined via \"filter\" parameter.  Request returns the \"exportId\" which is passed as a parameter in subsequent calls to Bulk Export Program Members endpoints.  Use Enqueue Export Program Member Job endpoint to queue the export job for processing.  Use Get Export Program Member Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead",
          "operationId": "createExportProgramMembersUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "exportProgramMemberRequest",
              "description": "exportProgramMemberRequest<br><br>ColumnHeaderNames: A JSON object containing key-value pairs of field and column header names.<br><br>Example:<br><code>\"columnHeaderNames\":{<br>  \"firstName\":\"First Name\",<br>  \"lastName\":\"Last Name\",<br>  \"email\":\"Email Address\"<br>}</code><br>",
              "required": false,
              "schema": {
                "$ref": "#/definitions/ExportProgramMemberRequest"
              }
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/program/members/export/{exportId}/cancel.json": {
        "post": {
          "tags": [
            "Bulk Export Program Members"
          ],
          "summary": "Cancel Export Program Member Job",
          "description": "Cancel export job.  Required Permissions: Read-Only Lead",
          "operationId": "cancelExportProgramMembersUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/program/members/export/{exportId}/enqueue.json": {
        "post": {
          "tags": [
            "Bulk Export Program Members"
          ],
          "summary": "Enqueue Export Program Member Job - Step 2",
          "description": "Enqueue export job. This will place export job in queue, and will start the job when computing resources become available.  The export job must be in \"Created\" state.  Use Get Export Program Member Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead",
          "operationId": "enqueueExportProgramMembersUsingPOST",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      },
      "/bulk/v1/program/members/export/{exportId}/file.json": {
        "get": {
          "tags": [
            "Bulk Export Program Members"
          ],
          "summary": "Get Export Program Member File - Step 3",
          "description": "Returns the file content of an export job.  The export job must be in \"Completed\" state.  Use Get Export Program Member Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead<br><br>The file format is specified by calling the Create Export Program Member Job endpoint. The following is an example of the default file format (\"CSV\").<br><br><code>firstName,lastName,email</code><br><code>Marvin,Gaye,marvin.gaye@motown.com</code>",
          "operationId": "getExportProgramMembersFileUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "Range",
              "in": "header",
              "description": "To support partial retrieval of extracted data, the HTTP header \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval Requests\" for more information. If the header is not set, the entire contents will be returned.",
              "required": false,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ObservableOfInputStreamRangeContent"
              }
            }
          }
        }
      },
      "/bulk/v1/program/members/export/{exportId}/status.json": {
        "get": {
          "tags": [
            "Bulk Export Program Members"
          ],
          "summary": "Get Export Program Member Job Status - Step 2.1 (optional)",
          "description": "Returns status of an export job.  Job status is available for 30 days after Completed or Failed status was reached. Required Permissions: Read-Only Lead",
          "operationId": "getExportProgramMembersStatusUsingGET",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "exportId",
              "in": "path",
              "description": "Id of export batch job.",
              "required": true,
              "type": "string"
            },
            {
              "name": "access_token",
              "in": "query",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ResponseOfExportResponse"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "ResponseOfActivity": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/Activity"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfLists": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/List"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfPrograms": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/Program"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfSmartCampaigns": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/SmartCampaign"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "LeadInputData": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of a lead record"
          }
        },
        "description": "Lead record containing only lead id"
      },
      "ResponseOfStaticList": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/StaticList"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfCustomActivityType": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/CustomActivityType"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "LeadChange": {
        "type": "object",
        "required": [
          "activityDate",
          "activityTypeId",
          "attributes",
          "id",
          "leadId"
        ],
        "properties": {
          "activityDate": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime of the activity"
          },
          "activityTypeId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the activity type"
          },
          "attributes": {
            "type": "array",
            "description": "List of secondary attributes",
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "campaignId": {
            "type": "integer",
            "format": "int64"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LeadChangeField"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Integer id of the activity.  For instances which have been migrated to Activity Service, this field may not be present, and should not be treated as unique."
          },
          "leadId": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the lead associated to the activity"
          },
          "marketoGUID": {
            "type": "string",
            "description": "Unique id of the activity (128 character string)"
          }
        }
      },
      "LeadPartition": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the partition"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of the partition"
          },
          "name": {
            "type": "string",
            "description": "Name of the partition"
          }
        }
      },
      "ActivityType": {
        "type": "object",
        "required": [
          "attributes",
          "id",
          "name",
          "primaryAttribute"
        ],
        "properties": {
          "apiName": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "description": "List of secondary attributes of the type",
            "items": {
              "$ref": "#/definitions/ActivityTypeAttribute"
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the activity type"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the activity type"
          },
          "name": {
            "type": "string",
            "description": "Name of the activity type"
          },
          "primaryAttribute": {
            "description": "Primary attribute of the type",
            "$ref": "#/definitions/ActivityTypeAttribute"
          }
        }
      },
      "ActivityTypeAttribute": {
        "type": "object",
        "required": [
          "dataType",
          "name"
        ],
        "properties": {
          "apiName": {
            "type": "string"
          },
          "dataType": {
            "type": "string",
            "description": "Datatype of the Attribute"
          },
          "name": {
            "type": "string",
            "description": "Name of the attribute"
          }
        }
      },
      "ResponseWithoutResult": {
        "type": "object",
        "required": [
          "requestId",
          "success"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token returned from a previous response"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "SyncCustomObjectRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "action": {
            "type": "string",
            "description": "Type of sync operation to perform",
            "enum": [
              "createOnly",
              "updateOnly",
              "createOrUpdate"
            ]
          },
          "dedupeBy": {
            "type": "string",
            "description": "Field to deduplicate on.  If the value in the field for a given record is not unique, an error will be returned for the individual record."
          },
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/CustomObject"
            }
          }
        }
      },
      "SyncProgramMemberStatusRequest": {
        "type": "object",
        "required": [
          "statusName",
          "input"
        ],
        "properties": {
          "statusName": {
            "type": "string",
            "description": "Program member status"
          },
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/ProgramMemberStatus"
            }
          }
        }
      },
      "ProgramMemberStatus": {
        "type": "object",
        "required": [
          "leadId"
        ],
        "properties": {
          "leadId": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of a lead record"
          }
        }
      },
      "SyncProgramMemberDataRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/ProgramMemberData"
            }
          }
        }
      },
      "ProgramMemberData": {
        "type": "object",
        "required": [
          "leadId",
          "{fieldApiName}"
        ],
        "properties": {
          "leadId": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of a lead record"
          },
          "{fieldApiName}": {
            "type": "string",
            "description": "API Name of field to update.  Must be updateable as described by <a href=\"/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Leads/describeProgramMemberUsingGET2\">Describe Program Member</a> endpoint."
          },
          "{fieldApiName2}": {
            "type": "string",
            "description": "API Name of another field to update (and so forth).  Must be updateable as described by <a href=\"/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Leads/describeProgramMemberUsingGET2\">Describe Program Member</a> endpoint."
          }
        }
      },
      "DeleteProgramMemberRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/ProgramMemberDelete"
            }
          }
        }
      },
      "ProgramMemberDelete": {
        "type": "object",
        "required": [
          "leadId"
        ],
        "properties": {
          "leadId": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of a lead record"
          }
        }
      },
      "SyncCustomObjectTypeRequest": {
        "type": "object",
        "required": [
          "apiName",
          "displayName"
        ],
        "properties": {
          "action": {
            "type": "string",
            "description": "Type of sync operation to perform.  Default is createOrUpdate.",
            "enum": [
              "createOnly",
              "updateOnly",
              "createOrUpdate"
            ]
          },
          "displayName": {
            "type": "string",
            "description": "UI display-name of the custom object type"
          },
          "apiName": {
            "type": "string",
            "description": "API name of the custom object type"
          },
          "pluralName": {
            "type": "string",
            "description": "UI plural-name of the custom object type"
          },
          "description": {
            "type": "string",
            "description": "Description of the custom object type"
          },
          "showInLeadDetail": {
            "type": "boolean",
            "description": "Whether to show custom object type in lead detail of UI.  Default is false"
          }
        }
      },
      "InputStream": {
        "type": "object"
      },
      "TriggerCampaignRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "description": "Object describing trigger configuration for the campaign",
            "$ref": "#/definitions/TriggerCampaignData"
          }
        }
      },
      "ResponseOfNamedAccount": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/NamedAccount"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "Lead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of a lead record"
          },
          "membership": {
            "description": "Membership data for the parent program.  Only returned via Get Leads By Program Id",
            "$ref": "#/definitions/ProgramMembership"
          },
          "reason": {
            "description": "Reason object describing why an operation did not succeed for a record",
            "$ref": "#/definitions/Reason"
          },
          "status": {
            "type": "string",
            "description": "Status of the operation performed on the record"
          }
        },
        "description": "Lead record.  Always contains id, but may have any number of other fields, depending on the fields available in the target instance."
      },
      "PushLead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of a lead record"
          },
          "reason": {
            "description": "Reason object describing why an operation did not succeed for a record",
            "$ref": "#/definitions/Reason"
          },
          "status": {
            "type": "string",
            "description": "Status of the operation performed on the record"
          }
        },
        "description": "Lead record.  Always contains id, but may have any number of other fields, depending on the fields available in the target instance."
      },
      "LeadField": {
        "type": "object",
        "description": "Lead field record",
        "required": [
          "displayName",
          "name",
          "description",
          "dataType",
          "isHidden",
          "isHtmlEncodingInEmail",
          "isSensitive",
          "isCustom",
          "isApiCreated"
        ],
        "properties": {
          "displayName": {
            "type": "string",
            "description": "UI display-name of the field"
          },
          "name": {
            "type": "string",
            "description": "API name of the field"
          },
          "description": {
            "type": "string",
            "description": "Description of the field"
          },
          "dataType": {
            "type": "string",
            "description": "Datatype of the field"
          },
          "length": {
            "type": "integer",
            "format": "int32",
            "description": "Max length of the field.  Only applicable to text, string, and text area."
          },
          "isHidden": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, the field is hidden"
          },
          "isHtmlEncodingInEmail": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, field is encoded as HTML in email"
          },
          "isSensitive": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, field is marked as sensitive"
          },
          "isCustom": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, field is custom"
          },
          "isApiCreated": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, field was created using REST API"
          }
        }
      },
      "UpdateLeadField": {
        "type": "object",
        "description": "Lead field record for update",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "UI display-name of the field"
          },
          "description": {
            "type": "string",
            "description": "Description of the field"
          },
          "isHidden": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, the field is hidden.  Default is false"
          },
          "isHtmlEncodingInEmail": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, field is encoded as HTML in email.  Default is true"
          },
          "isSensitive": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, field is marked as sensitive.  Default is false"
          }
        }
      },
      "CreateLeadField": {
        "type": "object",
        "required": [
          "displayName",
          "name",
          "dataType"
        ],
        "description": "Lead field record for create",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "UI display-name of the field.  Must be unique, cannot contain special characters"
          },
          "name": {
            "type": "string",
            "description": "API name of the field.  Must be unique, start with a letter, and only contain letters, numbers, or underscore"
          },
          "description": {
            "type": "string",
            "description": "Description of the field.  Default is no description"
          },
          "dataType": {
            "type": "string",
            "description": "Datatype of the field",
            "enum": [
              "boolean",
              "currency",
              "date",
              "datetime",
              "email",
              "float",
              "integer",
              "percent",
              "phone",
              "score",
              "string",
              "url"
            ]
          },
          "isHidden": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, the field is hidden.  Default is false"
          },
          "isHtmlEncodingInEmail": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, field is encoded as HTML in email.  Default is true"
          },
          "isSensitive": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, field is marked as sensitive.  Default is false"
          }
        }
      },
      "LeadFieldStatus": {
        "type": "object",
        "required": [
          "name",
          "status"
        ],
        "description": "Lead field update status",
        "properties": {
          "name": {
            "type": "string",
            "description": "API name of the field"
          },
          "status": {
            "type": "string",
            "description": "Status of the operation performed on the record",
            "enum": [
              "created",
              "updated"
            ]
          }
        }
      },
      "UpdateLeadFieldRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "Single lead field for input",
            "items": {
              "$ref": "#/definitions/UpdateLeadField"
            }
          }
        }
      },
      "CreateLeadFieldRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of lead fields for input",
            "items": {
              "$ref": "#/definitions/CreateLeadField"
            }
          }
        }
      },
      "SyncLeadRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "action": {
            "type": "string",
            "description": "Type of sync operation to perform.  Defaults to createOrUpdate if unset",
            "enum": [
              "createOnly",
              "updateOnly",
              "createOrUpdate",
              "createDuplicate"
            ]
          },
          "asyncProcessing": {
            "type": "boolean",
            "example": false,
            "description": "If set to true, the call will return immediately"
          },
          "input": {
            "type": "array",
            "description": "List of leads for input",
            "items": {
              "$ref": "#/definitions/Lead"
            }
          },
          "lookupField": {
            "type": "string",
            "description": "Field to deduplicate on.  The field must be present in each lead record of the input.  Defaults to email if unset"
          },
          "partitionName": {
            "type": "string",
            "description": "Name of the partition to operate on, if applicable.  Should be set whenever possible, when interacting with an instance where partitions are enabled."
          }
        }
      },
      "DeleteSalesPersonRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "deleteBy": {
            "type": "string",
            "description": "Key to use for deletion of the record"
          },
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/SalesPerson"
            }
          }
        }
      },
      "ListOperationOutputData": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of a lead record"
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          },
          "status": {
            "type": "string",
            "description": "Status of the operation performed on the record"
          }
        }
      },
      "LeadAttribute": {
        "type": "object",
        "required": [
          "dataType",
          "displayName",
          "id"
        ],
        "properties": {
          "dataType": {
            "type": "string",
            "description": "Datatype of the field"
          },
          "displayName": {
            "type": "string",
            "description": "UI display-name of the field"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of the field"
          },
          "length": {
            "type": "integer",
            "format": "int32",
            "description": "Max length of the field.  Only applicable to text, string, and text area."
          },
          "rest": {
            "description": "Description of REST API usage attributes",
            "$ref": "#/definitions/LeadMapAttribute"
          },
          "soap": {
            "description": "Description of SOAP API usage attributes",
            "$ref": "#/definitions/LeadMapAttribute"
          }
        }
      },
      "LeadAttribute2": {
        "type": "object",
        "required": [
          "name",
          "searchableFields",
          "fields"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "\"API Lead\""
          },
          "searchableFields": {
            "type": "array",
            "description": "List of searchable fields",
            "items": {
              "$ref": "#/definitions/LeadAttribute2SearchableFields"
            }
          },
          "fields": {
            "type": "array",
            "description": "Description of searchable fields",
            "items": {
              "$ref": "#/definitions/LeadAttribute2Fields"
            }
          }
        }
      },
      "LeadAttribute2SearchableFields": {
        "type": "array",
        "description": "List of searchable fields",
        "items": {
          "type": "string",
          "description": "Searchable field"
        }
      },
      "LeadAttribute2Fields": {
        "type": "object",
        "required": [
          "name",
          "displayName",
          "dataType",
          "updateable",
          "crmManaged"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "REST API name of field"
          },
          "displayName": {
            "type": "string",
            "description": "Display name of field (friendly name)"
          },
          "dataType": {
            "type": "string",
            "description": "Data type of field"
          },
          "length": {
            "type": "integer",
            "description": "Length of field"
          },
          "updateable": {
            "type": "boolean",
            "description": "Is field updateable"
          },
          "crmManaged": {
            "type": "boolean",
            "description": "Is field managed by CRM"
          }
        }
      },
      "LeadAttribute2Fields2": {
        "type": "object",
        "required": [
          "name",
          "displayName",
          "dataType",
          "updateable",
          "crmManaged"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "REST API name of field"
          },
          "displayName": {
            "type": "string",
            "description": "Display name of field (friendly name)"
          },
          "dataType": {
            "type": "string",
            "description": "Data type of field"
          },
          "length": {
            "type": "integer",
            "description": "Length of field"
          },
          "updateable": {
            "type": "boolean",
            "description": "Is field updateable"
          },
          "crmManaged": {
            "type": "boolean",
            "description": "Is field managed by CRM"
          }
        }
      },
      "ProgramMemberAttribute": {
        "type": "object",
        "required": [
          "fields"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "\"API Program Member\""
          },
          "fields": {
            "type": "array",
            "description": "Description of searchable fields",
            "items": {
              "$ref": "#/definitions/LeadAttribute2Fields"
            }
          }
        }
      },
      "ProgramMemberAttribute2": {
        "type": "object",
        "required": [
          "name",
          "description",
          "createdAt",
          "updatedAt",
          "dedupeFields",
          "searchableFields",
          "fields"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "\"API Program Member\""
          },
          "description": {
            "type": "string",
            "description": "\"API Program Member Map\""
          },
          "createdAt": {
            "type": "string",
            "description": "Datetime when created"
          },
          "updatedAt": {
            "type": "string",
            "description": "Datetime updated"
          },
          "dedupeFields": {
            "type": "array",
            "description": "List of dedupe fields",
            "items": {
              "type": "string"
            }
          },
          "searchableFields": {
            "type": "array",
            "description": "List of searchable fields",
            "items": {
              "$ref": "#/definitions/LeadAttribute2SearchableFields"
            }
          },
          "fields": {
            "type": "array",
            "description": "Description of searchable fields",
            "items": {
              "$ref": "#/definitions/LeadAttribute2Fields2"
            }
          }
        }
      },
      "ScheduleCampaignRequest": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/definitions/ScheduleCampaignData"
          }
        },
        "description": "Record describe how to schedule the campaign"
      },
      "SyncSalesPersonRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "action": {
            "type": "string",
            "description": "Type of sync operation to perform",
            "enum": [
              "createOnly",
              "updateOnly",
              "createOrUpdate"
            ]
          },
          "dedupeBy": {
            "type": "string",
            "description": "Field to deduplicate on.  If the value in the field for a given record is not unique, an error will be returned for the individual record."
          },
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/SalesPerson"
            }
          }
        }
      },
      "ResponseOfImportLeadResponse": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ImportLeadResponse"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "NamedAccountList": {
        "type": "object",
        "required": [
          "marketoGUID",
          "seq"
        ],
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Datetime when the named account list was created"
          },
          "marketoGUID": {
            "type": "string",
            "description": "Unique GUID of the custom object records"
          },
          "name": {
            "type": "string",
            "description": "Name of named account list"
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          },
          "seq": {
            "type": "integer",
            "format": "int32",
            "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "deleted",
              "skipped",
              "added",
              "removed"
            ]
          },
          "type": {
            "type": "string",
            "description": "Type of named account list (\"default\" if created by user or API, \"external\" if managed by CRM-View)"
          },
          "updateable": {
            "type": "boolean",
            "example": false,
            "description": "Whether the list is updateable (true if created by user or API, false if managed by CRM-View)"
          },
          "updatedAt": {
            "type": "string",
            "description": "Datetime when the named account list was most recently updated"
          }
        }
      },
      "ExportLeadRequest": {
        "type": "object",
        "required": [
          "fields",
          "filter"
        ],
        "properties": {
          "columnHeaderNames": {
            "description": "File header field names override (corresponds with REST API name)",
            "$ref": "#/definitions/ColumnHeaderNames"
          },
          "fields": {
            "type": "array",
            "description": "Comma-separated list of fields to include in the file",
            "items": {
              "type": "string"
            },
            "example": [
              "X5th_day_checkbox__c",
              "X7th_day_checkbox__c",
              "ABM_Category__c",
              "ABM_Category__c_contact",
              "ABM_Category__c_lead",
              "aBMInfluencerScore",
              "aBMMQLsScore",
              "Academic_Opt_Out__c",
              "Americas_Account_Category__c",
              "Account_CC__c",
              "Account_Contact_Role__c",
              "Account_Creation_Request__c",
              "CurrencyIsoCode_account",
              "Account_Entitlement_Status__c",
              "Account_Entitlement_Status__c_contact",
              "Account_ID_18_Digit__c",
              "NameLocal",
              "Account_Revenue_Tier__c",
              "AccountSource",
              "Account_Type__c",
              "Acquisition_Channel__c",
              "mktoAcquisitionDate",
              "Act_Now__c",
              "Act_Now_Date__c",
              "Act_Now_Reset_Date__c",
              "Active_MSC_One_Customer__c",
              "Active_MSC_One_Tokens__c",
              "ACV__c",
              "addtoNurture",
              "address",
              "Address_lead",
              "AgencyNo1__c",
              "AgencyNo2__c",
              "Agreement_Date__c",
              "Agreement_version__c",
              "Americas_Territory__c",
              "annualRevenue",
              "Annual_Sales__c",
              "anonymousIP",
              "Apex_IRT_Contact__c",
              "Approved__c",
              "Areas_of_Concerns__c",
              "Assigned_Overlay__c",
              "assignedOverlayB",
              "Assigned_Overlay_Email__c",
              "atEventComments",
              "atEventFollowUp",
              "Products__c",
              "behaviorScore",
              "billingStreet",
              "BillingAddress",
              "billingCity",
              "billingCountry",
              "BillingCountryCode",
              "BillingGeocodeAccuracy",
              "BillingLatitude",
              "BillingLongitude",
              "billingPostalCode",
              "billingState",
              "BillingStateCode",
              "blackListed",
              "blackListedCause",
              "Bounce__c",
              "bounceDate",
              "Business_Unit__c",
              "Bypass_Duplicate_Rules__c",
              "CAD_Software__c",
              "CAD_Usage__c",
              "campaignCode",
              "canReceiveEmail",
              "Cancel_Time_Based_Workflow__c",
              "capability",
              "Case_Contact_Country__c",
              "Case_Status__c",
              "CFD_Application__c",
              "CFD_Newsletter__c",
              "CFD_Usage__c",
              "Channel_Manager_Reject__c",
              "ChannelProgramLevelName",
              "ChannelProgramName",
              "city",
              "Closed_Lost_Date_MKTO__c",
              "Comment_History__c",
              "Company__c",
              "company",
              "Company_Name_Local_Language__c",
              "Company_name_Phonetic__c",
              "mktoCompanyNotes",
              "consentBlogUpdates",
              "Consent_Communications_Preferences__c",
              "consentMagazine",
              "consentMagazineDelivery",
              "consentMobileSMS",
              "consentNeuesAusCAEWelt",
              "consentNewsUpdates",
              "consentOptOutSurvey",
              "Consent_Personal_Data_Review_Request__c",
              "consentProductofInterest",
              "productofInterestCradle",
              "productofInterestExstream",
              "productofInterestFFT",
              "productofInterestFTI",
              "productofInterestMSC",
              "consentProductofInterestMSCApex",
              "consentProductofInterestRomax",
              "productofInterestSimufact",
              "productofInterestVires",
              "consentProductUpdates",
              "Consent_Remove_from_DB_Request__c",
              "consentStep1",
              "consentStep2",
              "consentStep3",
              "consentWebinarsEvents",
              "Consent_History__c",
              "Consent_Last_Updated__c",
              "consentNotes",
              "Consent_to_Processing__c",
              "consenttosharedatawithpartners",
              "Contact_Comments__c",
              "CurrencyIsoCode_contact",
              "Contact_First_Name_Phonetic__c",
              "Contact_Owner__c",
              "Contact_Owner_Function_MKTO__c",
              "Contact_Rating__c",
              "Contact_Status__c",
              "Contact_Status__c_contact",
              "Contact_Status_Comment__c",
              "Contact_Status_Reason__c",
              "Conversion_Date__c",
              "country",
              "countryB",
              "Country_Used_by_Tech_Support__c",
              "CountryCode",
              "county",
              "Cradle_Contact__c",
              "Cradle_Data__c",
              "Cradle_Memo__c",
              "Cradle_AgreementNo__c",
              "Cradle_CustomerNo__c",
              "Cradle_Industry__c",
              "CRD_Acc_ID__c",
              "CRD_Cont_ID__c",
              "createdAt",
              "Created_by_VG__c",
              "Customer_Number__c",
              "IsCustomerPortal",
              "Technical_Support_Account_Manager_TSAM__c",
              "Data_Source_Id__c",
              "Jigsaw",
              "Jigsaw_account",
              "dateOfBirth",
              "daysdownloadedfile",
              "Deal_Registered_Date_now__c",
              "TARPS__Decision_Date__c",
              "TARPS__Decision_Date__c_account",
              "deliveriesAfterBounces",
              "demographicScore",
              "department",
              "Department__c",
              "Discount_Perc__c",
              "Division_All__c",
              "doNotCall",
              "mktoDoNotCallCause",
              "doNotCallReason",
              "downloadfreetrialfileid",
              "ecosystemCategories",
              "email",
              "emailBounceCategory",
              "emailBounceDetails",
              "EmailBouncedDate",
              "EmailBouncedReason",
              "emailBounces",
              "emailDeliveredAfterBounce",
              "emailInvalid",
              "Email_Invalid__c",
              "emailInvalidCause",
              "Email_of_Field_Sales__c",
              "emailSuspended",
              "emailSuspendedAt",
              "emailSuspendedCause",
              "EMEA_data_protection_policy__c",
              "EMEA_Territory__c",
              "eMEATerritoryB",
              "Entitlement_Status__c",
              "eventAttendance",
              "eventDateCode",
              "eventDateCodeID",
              "eventDateCodeSession",
              "eventDietryRequirements",
              "atEventEventName",
              "Events_Opt_Out__c",
              "Exclude_Overlays_MKTO__c",
              "Existing_Customer__c",
              "Expected_Close_Date__c",
              "Compliance_Status__c",
              "Extension__c",
              "externalCompanyId",
              "externalSalesPersonId",
              "fax",
              "HasOptedOutOfFax",
              "FEM_Usage__c",
              "fftfiledownload",
              "firmographicScore",
              "First_Contact__c",
              "First_MQL_SAL_MKTO__c",
              "First_MQL_SQL_MKTO__c",
              "First_MQL_Date_MKTO__c",
              "firstName",
              "First_name_Phonetic__c",
              "First_Opportunity_Won_Date_MKTO__c",
              "First_Won_Date__c",
              "TARPS__ForceRescreen__c",
              "TARPS__ForceRescreen__c_account",
              "formLanguage",
              "mktoName",
              "Full_Name__c",
              "GeocodeAccuracy",
              "Geography__c",
              "BU_Region__c",
              "globalFormWebPage",
              "hexagonAffiliation",
              "Host_ID__c",
              "ID_18_Digits__c",
              "implicitOptinDate",
              "In_Open__c",
              "In_Return_to_Marketing__c",
              "In_Sales_Accepted__c",
              "In_Will_Never_Buy__c",
              "industry",
              "Industry_Description__c",
              "Industry_Description__c_account",
              "Industry_Segment__c",
              "Industry_Segment__c_lead",
              "inferredCity",
              "inferredCompany",
              "inferredCountry",
              "inferredMetropolitanArea",
              "inferredPhoneAreaCode",
              "inferredPostalCode",
              "inferredStateRegion",
              "Interested_In__c",
              "Interesting_Moment__c",
              "mktoIsCustomer",
              "IsEmailBounced",
              "Is_Open_MQL_MKTO__c",
              "Is_Overlay_the_Logged_in_User__c",
              "mktoIsPartner",
              "isAccount__c",
              "IsAccountConverted__c",
              "isContact__c",
              "isLead__c",
              "JigsawCompanyId_account",
              "JigsawContactId_lead",
              "Job_Function__c",
              "title",
              "Portal_User_Language__c",
              "lastEngagement",
              "lastEngagementDate",
              "lastForm",
              "lastFormHistory",
              "lastName",
              "Last_name_Phonetic__c",
              "Last_Program_Success__c",
              "LastReferencedDate",
              "LastReferencedDate_account",
              "Last_Reporting_Date__c",
              "Last_Status_Change_Date__c",
              "Last_Success_Before_MQL_MKTO__c",
              "LastViewedDate",
              "LastViewedDate_account",
              "Latest_Actioned_Date_MKTO__c",
              "Latest_MQL_SAL_MKTO__c",
              "Latest_MQL_SQL_MKTO__c",
              "Latest_MQL_Date_MKTO__c",
              "Latest_Opportunity_Won_Date_MKTO__c",
              "latestOptinDate",
              "Latest_Return_to_Marketing_Date_MKTO__c",
              "Latitude",
              "Lead_Comments__c",
              "Zone_Region__c",
              "CurrencyIsoCode",
              "leadOwnerB",
              "leadOwnerAssigned",
              "leadOwnerAssignedDate",
              "Lead_Owner_Function__c",
              "Lead_Score_Most_Recent__c",
              "Lead_Status_Reason_Comment__c",
              "Lead_Status_Reason__c",
              "Legacy_System_and_Record_ID__c",
              "Legacy_System_Name__c",
              "Legacy_System_Name__c_contact",
              "Legacy_System_Record_ID__c",
              "Legacy_System_Record_ID__c_contact",
              "Legacy_System_Transfer_Date__c",
              "Legacy_System_Transfer_Date__c_account",
              "legalBasisforCommunication",
              "legalBasisforCommunicationLastUpdated",
              "Legal_Entity_Name__c",
              "Level_of_Interest__c",
              "License_Compliance_Status__c",
              "Lifecycle_Status__c",
              "TARPS__EOD_Link__c",
              "TARPS__EOD_Link__c_account",
              "Linked_Account__c",
              "Location_Type__c",
              "Longitude",
              "magnidIDPassword",
              "MailingAddress",
              "MailingCountryCode",
              "MailingGeocodeAccuracy",
              "MailingLatitude",
              "MailingLongitude",
              "MailingStateCode",
              "mainPhone",
              "marketingSuspended",
              "marketingSuspendedCause",
              "Marketing_Suspended_Date__c",
              "Marketing_Suspended_Reason__c",
              "marketoEventID",
              "facebookDisplayName",
              "facebookId",
              "facebookPhotoURL",
              "facebookProfileURL",
              "facebookReach",
              "facebookReferredEnrollments",
              "facebookReferredVisits",
              "gender",
              "lastReferredEnrollment",
              "lastReferredVisit",
              "linkedInDisplayName",
              "linkedInId",
              "linkedInPhotoURL",
              "linkedInProfileURL",
              "linkedInReach",
              "linkedInReferredEnrollments",
              "linkedInReferredVisits",
              "syndicationId",
              "totalReferredEnrollments",
              "totalReferredVisits",
              "twitterDisplayName",
              "twitterId",
              "twitterPhotoURL",
              "twitterProfileURL",
              "twitterReach",
              "twitterReferredEnrollments",
              "twitterReferredVisits",
              "Marketo_State__c",
              "Max__c",
              "middleName",
              "mobilePhone",
              "MQL_Sync__c",
              "MQL_Sync__c_account",
              "mSCContact",
              "MSC_Partner_Comm_Opt_Out__c",
              "MSC_Product__c",
              "Name_of_Field_Sales__c",
              "neverBounceValidationResult",
              "News_Newsletter_Opt_Out__c",
              "No_Longer_with_Account__c",
              "Tech_Support_Survey__c",
              "numberOfEmployees",
              "Number_of_Employees__c",
              "offeringCategory",
              "offeringsEcosystem",
              "On_Demand_Webinar__c",
              "oneWebSFDCLeadId",
              "MSC_Net__c",
              "orgType",
              "originalAssignedOverlay",
              "originalLeadOwner",
              "Original_Lead_Source__c",
              "originalPersonSource",
              "Original_Product_of_Interest__c",
              "OtherAddress",
              "OtherCountryCode",
              "OtherGeocodeAccuracy",
              "OtherLatitude",
              "OtherLongitude",
              "Other_Products__c",
              "OtherStateCode",
              "Partner_Account__c",
              "IsPartner",
              "Partner_Community_Check__c",
              "partnerSubType",
              "partnerType",
              "Lead_Interest__c",
              "mktoPersonNotes",
              "rating",
              "Lead_Rating__c",
              "leadScore",
              "leadSource",
              "leadStatus",
              "personTimeZone",
              "Phone_Extension__c",
              "phone",
              "PhotoUrl",
              "PhotoUrl_account",
              "physicalEventLevelofinterest",
              "Portfolio_Presentation__c",
              "postCodeB",
              "postalCode",
              "preferredLanguage",
              "Primary_Campaign__c",
              "Primary_Campaign_Function__c",
              "Primary_Customer_Contact__c",
              "priority",
              "processingPerson",
              "product",
              "productEnquiryType",
              "Product_Interest__c",
              "MSC_Products_Solutions_to_be_offered__c",
              "productofInterestB",
              "productofInterestScore",
              "project_timeframe",
              "Publication_flag__c",
              "RAmericas__c",
              "RecordTypeId",
              "RecordTypeId_account",
              "Region__c",
              "Region__c_account",
              "relativeScore",
              "relativeUrgency",
              "Remarks__c",
              "REMEA__c",
              "rescale",
              "resourceAssetID",
              "resourceTitle",
              "resourceType",
              "resourceURL",
              "Responsible_For__c",
              "Retirement__c",
              "Return_to_Marketing_Date_MKTO__c",
              "RingLead_DMS_Status__c",
              "leadRole",
              "Romax_Account_ID__c",
              "Romax_Account_Type__c",
              "Romax_Application__c",
              "Romax_ID__c",
              "Romax_MSC_Match__c",
              "Romax_MSC_Match__c_contact",
              "TARPS__RPL_Update_Inactive__c",
              "TARPS__RPL_Update_Inactive__c_account",
              "runSync",
              "SAL_SQL_MKTO__c",
              "SAL_Date_MKTO__c",
              "Sales_Accepted_Date__c",
              "Sales_Accepted_Days__c",
              "Lead_Owner__c",
              "salutation",
              "Score_at_MQL_MKTO__c",
              "sellingBrand",
              "sendABMAlert",
              "sendHelpdeskAlert",
              "sendMarketingAlert",
              "sendOverlayAlert",
              "sendSalesAlert",
              "sendSalesAlertDateTime",
              "sendSFDCTask",
              "sendSMSReminder",
              "sendSupportAlert",
              "sfdcAccountId",
              "sfdcContactId",
              "sfdcId",
              "sfdcLeadId",
              "sfdcLeadOwnerId",
              "sfdcType",
              "ShippingAddress",
              "ShippingCountryCode",
              "ShippingGeocodeAccuracy",
              "ShippingLatitude",
              "ShippingLongitude",
              "ShippingStateCode",
              "sicCode",
              "SicDesc",
              "consentPreferredCommunication",
              "simufactFreeTrial2",
              "simufactFreeTrial3",
              "simufactFreeTrial3Other",
              "simufactFreeTrial4",
              "simufactFreeTrial4Other",
              "SIRET_Number__c",
              "site",
              "sitecoreItemID",
              "ddc_prospector__Sourced_from_Data_com__c",
              "ddc_prospector__Sourced_from_Data_com__c_account",
              "ddc_prospector__Sourced_from_Data_com__c_contact",
              "SQL_Closed_Lost_MKTO__c",
              "SQL_First_Opportunity_Won_MKTO__c",
              "SQL_Latest_Opportunity_Won_MKTO__c",
              "SQL_Date_MKTO__c",
              "SQL_Date_2_MKTO__c",
              "SRAmericas__c",
              "SRAPAC__c",
              "SREMEA__c",
              "state",
              "stateCanada",
              "StateCode",
              "TARPS__Status__c",
              "TARPS__Status__c_account",
              "Status_Change__c",
              "Sub_Region__c",
              "Sub_Region__c_account",
              "Support_No__c",
              "supportType",
              "Tech_Support_Maintenance_Rev_Tiers__c",
              "tempPersonScore",
              "Time_in_Act_Now__c",
              "Time_in_Current_Status__c",
              "Time_to_Conversion_New__c",
              "Time_to_Conversion__c",
              "Time_to_Sales_Accepted_New__c",
              "Time_to_Sales_Accepted__c",
              "Time_Zone__c",
              "trainingDates",
              "interestofTraining",
              "twilioMessage",
              "Ultimate_Parent__c",
              "university",
              "unsubscribed",
              "unsubscribedReason",
              "updatedAt",
              "urgency",
              "Usage_Reporting_Request_Notes__c",
              "Usage_Reporting_Request_Owner__c",
              "Usage_Reporting_Request_Status__c",
              "Usage_Reporting_Requirement__c",
              "UTM_Campaign__c",
              "UTM_Content__c",
              "uTMContentB",
              "uTMHistory",
              "UTM_Medium__c",
              "UTM_Source__c",
              "UTM_Terms__c",
              "uTWCampaign",
              "VG_RecordId__c",
              "visaArrivalCountry",
              "visaArrivalDate",
              "visaCityApplication",
              "visaDepartureDate",
              "visaIsrequired",
              "visaPassportIssueDate",
              "visaPassportNumber",
              "visaPassportValidityDate",
              "website",
              "Will_Never_Buy_Date_MKTO__c"
            ]
          },
          "filter": {
            "description": "Lead record selection criteria. Can be one of the following: \"createdAt\", \"updatedAt\", \"staticListName\", \"staticListId\", \"smartListName\", \"smartListId\"",
            "$ref": "#/definitions/ExportLeadFilter"
          },
          "format": {
            "type": "string",
            "description": "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is \"CSV\"",
            "example": "CSV"
          }
        }
      },
      "ExportCustomObjectRequest": {
        "type": "object",
        "required": [
          "fields",
          "filter"
        ],
        "properties": {
          "columnHeaderNames": {
            "description": "File header field names override (corresponds with REST API name)",
            "$ref": "#/definitions/ColumnHeaderNames"
          },
          "fields": {
            "type": "array",
            "description": "Comma-separated list of custom object attributes to include in the file",
            "items": {
              "type": "string"
            }
          },
          "filter": {
            "description": "Custom object record selection criteria. Can be one of the following: \"updatedAt\", \"staticListName\", \"staticListId\", \"smartListName\", \"smartListId\"",
            "$ref": "#/definitions/ExportCustomObjectFilter"
          },
          "format": {
            "type": "string",
            "description": "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is \"CSV\""
          }
        }
      },
      "ExportProgramMemberRequest": {
        "type": "object",
        "required": [
          "fields",
          "filter"
        ],
        "properties": {
          "columnHeaderNames": {
            "description": "File header field names override (corresponds with REST API name)",
            "$ref": "#/definitions/ColumnHeaderNames"
          },
          "fields": {
            "type": "array",
            "description": "Comma-separated list of fields to include in the file",
            "items": {
              "type": "string"
            }
          },
          "filter": {
            "description": "Program member record selection criteria. Must be the following: \"programId\"",
            "$ref": "#/definitions/ExportProgramMemberFilter"
          },
          "format": {
            "type": "string",
            "description": "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is \"CSV\""
          }
        }
      },
      "CustomActivityRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of custom activities to insert",
            "items": {
              "$ref": "#/definitions/CustomActivity"
            }
          }
        }
      },
      "DeleteLeadRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of leads for input",
            "items": {
              "$ref": "#/definitions/LeadInputData"
            }
          }
        }
      },
      "Attribute": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "apiName": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the attribute"
          },
          "value": {
            "type": "object",
            "description": "Value of the attribute"
          }
        },
        "description": "Name-Value pair"
      },
      "SyncNamedAccountRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "action": {
            "type": "string",
            "description": "Type of sync operation to perform",
            "enum": [
              "createOnly",
              "updateOnly",
              "createOrUpdate"
            ]
          },
          "dedupeBy": {
            "type": "string",
            "description": "Field to deduplicate on.  If the value in the field for a given record is not unique, an error will be returned for the individual record."
          },
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/NamedAccount"
            }
          }
        }
      },
      "DeleteNamedAccountListRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "deleteBy": {
            "type": "string",
            "description": "Key to use for deletion of the record"
          },
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/NamedAccountList"
            }
          }
        }
      },
      "ResponseOfCampaign": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "DateRange": {
        "type": "object",
        "properties": {
          "endAt": {
            "type": "string",
            "description": "End of date range filter (ISO 8601-format)",
            "example": {
              "endAt": "20220616",
              "startAt": "20220516"
            }
          },
          "startAt": {
            "type": "string",
            "description": "Start of date range filter (ISO-8601 format)",
            "example": {
              "endAt": "20220616",
              "startAt": "20220516"
            }
          }
        }
      },
      "ResponseOfChangeLeadProgramStatusOutputData": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ChangeLeadProgramStatusOutputData"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfVoid": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ImportCustomObjectResponse": {
        "type": "object",
        "required": [
          "batchId",
          "objectApiName",
          "operation",
          "status"
        ],
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of the import batch"
          },
          "importTime": {
            "type": "string",
            "description": "Time spent on the batch"
          },
          "message": {
            "type": "string",
            "description": "Status message of the batch"
          },
          "numOfObjectsProcessed": {
            "type": "integer",
            "format": "int32",
            "description": "Number of rows processed so far"
          },
          "numOfRowsFailed": {
            "type": "integer",
            "format": "int32",
            "description": "Number of rows failed so far"
          },
          "numOfRowsWithWarning": {
            "type": "integer",
            "format": "int32",
            "description": "Number of rows with a warning so far"
          },
          "objectApiName": {
            "type": "string",
            "description": "Object API Name"
          },
          "operation": {
            "type": "string",
            "description": "Bulk operation type. Can be import or export"
          },
          "status": {
            "type": "string",
            "description": "Status of the batch"
          }
        },
        "description": "Response containing import status information"
      },
      "ImportProgramMemberResponse": {
        "type": "object",
        "required": [
          "batchId",
          "importId",
          "status"
        ],
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of the import job"
          },
          "importId": {
            "type": "string",
            "description": "Unique integer id of the import job"
          },
          "status": {
            "type": "string",
            "description": "Status of the import job"
          }
        },
        "description": "Response containing import status information"
      },
      "AddNamedAccountListMemberRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/NamedAccount"
            }
          }
        }
      },
      "ExportActivityFilter": {
        "type": "object",
        "required": [
          "createdAt"
        ],
        "properties": {
          "activityTypeIds": {
            "type": "array",
            "description": "List of activity type ids to filter on",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "primaryAttributeValueIds": {
            "type": "array",
            "description": "List of primary attribute ids to filter on",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "primaryAttributeValues": {
            "type": "array",
            "description": "List of primary attribute values to filter on",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "description": "Date range to filter new activities on",
            "$ref": "#/definitions/DateRange"
          }
        }
      },
      "ResponseOfListOperationOutputData": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ListOperationOutputData"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "Campaign": {
        "type": "object",
        "required": [
          "createdAt",
          "id",
          "name",
          "type",
          "updatedAt"
        ],
        "properties": {
          "active": {
            "type": "boolean",
            "example": false,
            "description": "Whether the campaign is active.  Only applicable to trigger campaigns"
          },
          "createdAt": {
            "type": "string",
            "description": "Datetime when the campaign was created"
          },
          "description": {
            "type": "string",
            "description": "Description of the Smart Campaign"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of the Smart Campaign"
          },
          "name": {
            "type": "string",
            "description": "Name of the Smart Campaign"
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the parent program if applicable"
          },
          "programName": {
            "type": "string",
            "description": "Name of the parent program if applicable"
          },
          "type": {
            "type": "string",
            "description": "Type of the Smart Campaign",
            "enum": [
              "batch",
              "trigger"
            ]
          },
          "updatedAt": {
            "type": "string",
            "description": "Datetime when the campaign was most recently updated"
          },
          "workspaceName": {
            "type": "string",
            "description": "Name of the parent workspace if applicable"
          }
        },
        "description": "Record of a Marketo Smart Campaign"
      },
      "DeleteNamedAccountRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "deleteBy": {
            "type": "string",
            "description": "Key to use for deletion of the record"
          },
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/NamedAccount"
            }
          }
        }
      },
      "ResponseOfLead": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/Lead"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfLeadByListId": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/Lead"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfLeadField": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/LeadField"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfUpdateLeadField": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/LeadFieldStatus"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfCreateLeadField": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/LeadFieldStatus"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfPushLeadToMarketo": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/Lead"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfSubmitForm": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/FormResponse"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "FormResponse": {
        "type": "object",
        "description": "Disposition of lead",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Id of lead"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "skipped"
            ]
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          }
        }
      },
      "Activity": {
        "type": "object",
        "required": [
          "activityDate",
          "activityTypeId",
          "attributes",
          "id",
          "leadId"
        ],
        "properties": {
          "activityDate": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime of the activity"
          },
          "activityTypeId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the activity type"
          },
          "attributes": {
            "type": "array",
            "description": "List of secondary attributes",
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "campaignId": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the associated Smart Campaign, if applicable"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Integer id of the activity. This value could exceed Int.MAX. For instances which have been migrated to Activity Service, this field may not be present, and should not be treated as unique."
          },
          "leadId": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the lead associated to the activity"
          },
          "marketoGUID": {
            "type": "string",
            "description": "Unique id of the activity (128 character string)"
          },
          "primaryAttributeValue": {
            "type": "string",
            "description": "Value of the primary attribute"
          },
          "primaryAttributeValueId": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the primary attribute field"
          }
        }
      },
      "CustomActivityTypeAttributeRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "description": "List of attributes to add to the activity type",
            "items": {
              "$ref": "#/definitions/CustomActivityTypeAttribute"
            }
          }
        }
      },
      "AddCustomObjectTypeFieldsRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of fields to add to custom object type",
            "items": {
              "$ref": "#/definitions/AddCustomObjectTypeField"
            }
          }
        }
      },
      "AddCustomObjectTypeField": {
        "type": "object",
        "required": [
          "name",
          "displayName",
          "dataType"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "API Name of custom object field"
          },
          "displayName": {
            "type": "string",
            "description": "UI display-name of the custom object field"
          },
          "dataType": {
            "type": "string",
            "description": "Datatype of the custom object field"
          },
          "description": {
            "type": "string",
            "description": "Description of the custom object field"
          },
          "isDedupeField": {
            "type": "boolean",
            "description": "Set to true to enable field as unique identifier for deduplicating records.  Default is false"
          },
          "relatedTo": {
            "description": "Define custom object link field",
            "$ref": "#/definitions/CustomObjectTypeFieldRelatedTo"
          }
        }
      },
      "UpdateCustomObjectTypeFieldRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "API Name of custom object field"
          },
          "displayName": {
            "type": "string",
            "description": "UI display-name of the custom object field"
          },
          "dataType": {
            "type": "string",
            "description": "Datatype of the custom object field"
          },
          "description": {
            "type": "string",
            "description": "Description of the custom object field"
          },
          "isDedupeField": {
            "type": "boolean",
            "description": "Set to true to enable field as unique identifier for deduplicating records.  Default is false"
          },
          "relatedTo": {
            "description": "Define custom object link field",
            "$ref": "#/definitions/CustomObjectTypeFieldRelatedTo"
          }
        }
      },
      "CustomObjectTypeFieldRelatedTo": {
        "type": "object",
        "required": [
          "name",
          "field"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of linkable object type"
          },
          "field": {
            "type": "string",
            "description": "Foreign field to which the parent is linked"
          }
        }
      },
      "DeleteCustomObjectTypeFieldsRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of fields to delete from the custom object type",
            "items": {
              "$ref": "#/definitions/DeleteCustomObjectTypeField"
            }
          }
        }
      },
      "DeleteCustomObjectTypeField": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "API Name of custom object type field"
          }
        }
      },
      "TriggerCampaignData": {
        "type": "object",
        "required": [
          "leads"
        ],
        "properties": {
          "leads": {
            "type": "array",
            "description": "List of leads for input",
            "items": {
              "$ref": "#/definitions/InputLead"
            }
          },
          "tokens": {
            "type": "array",
            "description": "List of my tokens to replace during the run of the target campaign.  The tokens must be available in a parent program or folder to be replaced during the run",
            "items": {
              "$ref": "#/definitions/Token"
            }
          }
        }
      },
      "ObjectMetaData": {
        "type": "object",
        "required": [
          "createdAt",
          "dedupeFields",
          "description",
          "displayName",
          "pluralName",
          "fields",
          "idField",
          "apiName",
          "relationships",
          "searchableFields",
          "updatedAt",
          "status",
          "version"
        ],
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime when the object type was created"
          },
          "dedupeFields": {
            "type": "array",
            "description": "List of dedupe fields.  Arrays with multiple members are compound keys",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the object type"
          },
          "displayName": {
            "type": "string",
            "description": "UI display-name of the object type"
          },
          "pluralName": {
            "type": "string",
            "description": "UI plural-name of the custom object type"
          },
          "fields": {
            "type": "array",
            "description": "List of fields available on the object type",
            "items": {
              "$ref": "#/definitions/ObjectField"
            }
          },
          "idField": {
            "type": "string",
            "description": "Primary id key of the object type"
          },
          "apiName": {
            "type": "string",
            "description": "Name of the object type"
          },
          "relationships": {
            "type": "array",
            "description": "List of relationships which the object has",
            "items": {
              "$ref": "#/definitions/ObjectRelation"
            }
          },
          "searchableFields": {
            "type": "array",
            "description": "List of fields valid for use as a filter type in a query",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime when the object type was most recently updated"
          },
          "state": {
            "type": "string",
            "description": "Approval state of object type",
            "enum": [
              "draft",
              "approved",
              "approvedWithDraft"
            ]
          },
          "version": {
            "type": "string",
            "description": "Version of object type that is returned in response",
            "enum": [
              "draft",
              "approved"
            ]
          }
        }
      },
      "ObjectLinkableObject": {
        "type": "object",
        "required": [
          "name",
          "displayName",
          "fields"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Link object API name"
          },
          "displayName": {
            "type": "string",
            "description": "Link object UI display-name"
          },
          "fields": {
            "type": "array",
            "description": "List of fields available on the link object",
            "items": {
              "$ref": "#/definitions/ObjectLinkableObjectField"
            }
          }
        }
      },
      "ObjectDependentAsset": {
        "type": "object",
        "required": [
          "assetType",
          "assetId",
          "assetName"
        ],
        "properties": {
          "assetType": {
            "type": "string",
            "description": "Type of asset"
          },
          "assetId": {
            "type": "integer",
            "format": "int32",
            "description": "ID of asset"
          },
          "assetName": {
            "type": "string",
            "description": "Name of asset"
          },
          "usedFields": {
            "type": "array",
            "description": "List of associated fields",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ObjectLinkableObjectField": {
        "type": "object",
        "required": [
          "name",
          "displayName",
          "dataType"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Link field API name"
          },
          "displayName": {
            "type": "string",
            "description": "Link field name"
          },
          "dataType": {
            "type": "string",
            "description": "Link field data type"
          }
        }
      },
      "CustomActivityTypeRequest": {
        "type": "object",
        "required": [
          "apiName",
          "name",
          "triggerName",
          "filterName",
          "primaryAttribute"
        ],
        "properties": {
          "apiName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "filterName": {
            "type": "string",
            "description": "Human-readable name of the associated filter"
          },
          "name": {
            "type": "string",
            "description": "Human-readable display name of the activity type"
          },
          "primaryAttribute": {
            "description": "Primary attribute of the activity type",
            "$ref": "#/definitions/CustomActivityTypeAttribute"
          },
          "triggerName": {
            "type": "string",
            "description": "Human-readable name of the associated trigger"
          }
        }
      },
      "ListOperationRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of leads for input",
            "items": {
              "$ref": "#/definitions/LeadInputData"
            }
          }
        }
      },
      "ResponseOfLeadPartition": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/LeadPartition"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfObjectMetaData": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ObjectMetaData"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfCustomObjectTypeFieldDataTypes": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "List of permissible data types for custom object fields",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfObjectLinkableObject": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "List of permissible objects to use as custom object link field",
            "items": {
              "$ref": "#/definitions/ObjectLinkableObject"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfObjectDependentAssets": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "List of dependent assets for a custom object type",
            "items": {
              "$ref": "#/definitions/ObjectDependentAsset"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "InputLead": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of a lead record"
          }
        },
        "description": "Lead record containing only lead id"
      },
      "CustomActivityType": {
        "type": "object",
        "properties": {
          "apiName": {
            "type": "string",
            "description": "API Name of the type.  The API name must be unique and alphanumeric, containing at least one letter.  It is highly recommended to prepend a unique namespace of up to sixteen characters to the API name.  Required on creation"
          },
          "attributes": {
            "type": "array",
            "description": "List of attributes for the activity type.  May only be added or update through Create or Update Custom Activity Type Attributes",
            "items": {
              "$ref": "#/definitions/CustomActivityTypeAttribute"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Datetime when the activity type was created"
          },
          "description": {
            "type": "string",
            "description": "Description of the activity type"
          },
          "filterName": {
            "type": "string",
            "description": "Human-readable name for the associated filter of the activity type.  Required on creation"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Human-readable display name of the type.  Required on creation"
          },
          "primaryAttribute": {
            "description": "Primary Attribute of the activity type.  Required on creation",
            "$ref": "#/definitions/CustomActivityTypeAttribute"
          },
          "status": {
            "type": "string",
            "description": "State of the activity type",
            "enum": [
              "draft",
              "approved",
              "deleted",
              "approved with draft"
            ]
          },
          "triggerName": {
            "type": "string",
            "description": "Human-readable name for the associated trigger of the activity type.  Required on creation"
          },
          "updatedAt": {
            "type": "string",
            "description": "Datetime when the activity type was most recently updated"
          }
        }
      },
      "ChangeLeadProgramStatusRequest": {
        "type": "object",
        "required": [
          "input",
          "status"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of leads for input",
            "items": {
              "$ref": "#/definitions/LeadLookupInputData"
            }
          },
          "status": {
            "type": "string",
            "description": "Program status of the record.  Permissible values can be retrieve from the Get Channel by Name API for the designated program's channel"
          }
        }
      },
      "ResponseOfNamedAccountList": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/NamedAccountList"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfLeadAttribute": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/LeadAttribute"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfLeadAttribute2": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/LeadAttribute2"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfProgramMemberAttributes": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ProgramMemberAttribute"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfProgramMemberAttributes2": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ProgramMemberAttribute2"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfCompany": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/CompanyResponse"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfUsageData": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/UsageData"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfErrorsData": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ErrorsData"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ObjectRelation": {
        "type": "object",
        "required": [
          "field",
          "relatedTo",
          "type"
        ],
        "properties": {
          "field": {
            "type": "string",
            "description": "API Name of link field"
          },
          "relatedTo": {
            "description": "Object to which the field is linked",
            "$ref": "#/definitions/RelatedObject"
          },
          "type": {
            "type": "string",
            "description": "Type of the relationship field"
          }
        }
      },
      "Warning": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Integer code of the warning"
          },
          "message": {
            "type": "string",
            "description": "Message describing the warning"
          }
        }
      },
      "Empty": {},
      "ResponseOfExportResponse": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ExportResponse"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfExportResponseWithToken": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ExportResponse"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfCustomObject": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/CustomObject"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfProgramMember": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ProgramMember"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ProgramMember": {
        "type": "object",
        "description": "Program member record.  Always contains lead id, but may have any number of other fields, depending on the fields available in the target instance.",
        "required": [
          "seq",
          "leadId",
          "reachedSuccess",
          "programId",
          "acquiredBy",
          "membershipDate"
        ],
        "properties": {
          "seq": {
            "type": "integer",
            "format": "int32",
            "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
          },
          "leadId": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of a lead record"
          },
          "reachedSuccess": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if program member has reached success criteria for program"
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of a program"
          },
          "acquiredBy": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if program member was acquired by program"
          },
          "membershipDate": {
            "type": "string",
            "description": "Date the lead first became a member of the program"
          }
        }
      },
      "ResponseOfProgramMemberStatus": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ProgramMemberStatusResponse"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfProgramMemberData": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ProgramMemberStatusResponse"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfProgramMemberDelete": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ProgramMemberDeleteResponse"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfCustomObjectType": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Empty array",
            "items": {
              "$ref": "#/definitions/Empty"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "NamedAccount": {
        "type": "object",
        "required": [
          "marketoGUID",
          "seq"
        ],
        "properties": {
          "marketoGUID": {
            "type": "string",
            "description": "Unique GUID of the custom object records"
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          },
          "seq": {
            "type": "integer",
            "format": "int32",
            "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "deleted",
              "skipped",
              "added",
              "removed"
            ]
          }
        }
      },
      "ObservableOfInputStreamRangeContent": {
        "type": "object"
      },
      "ImportLeadResponse": {
        "type": "object",
        "required": [
          "batchId",
          "numOfLeadsProcessed",
          "status"
        ],
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of the import batch"
          },
          "importId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "numOfLeadsProcessed": {
            "type": "integer",
            "format": "int32",
            "description": "Number of rows processed so far"
          },
          "numOfRowsFailed": {
            "type": "integer",
            "format": "int32",
            "description": "Number of rows failed so far"
          },
          "numOfRowsWithWarning": {
            "type": "integer",
            "format": "int32",
            "description": "Number of rows with a warning so far"
          },
          "status": {
            "type": "string",
            "description": "Status of the batch"
          }
        },
        "description": "Response containing import status information"
      },
      "PushLeadToMarketoRequest": {
        "type": "object",
        "properties": {
          "input": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PushLead"
            }
          },
          "lookupField": {
            "type": "string"
          },
          "partitionName": {
            "type": "string"
          },
          "programName": {
            "type": "string"
          },
          "programStatus": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "SubmitFormRequest": {
        "type": "object",
        "required": [
          "input",
          "formId"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "Single array item that contains form fields and visitor data to use during a form submittal",
            "items": {
              "$ref": "#/definitions/Form"
            }
          },
          "formId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the form"
          },
          "programId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the program to add lead and/or program member custom fields to"
          }
        }
      },
      "Form": {
        "type": "object",
        "required": [
          "leadFormFields"
        ],
        "properties": {
          "leadFormFields": {
            "description": "List of form fields.  Email is required field",
            "$ref": "#/definitions/LeadFormFields"
          },
          "visitorData": {
            "description": "Page visit-related data",
            "$ref": "#/definitions/VisitorData"
          },
          "cookie": {
            "type": "string",
            "description": "Munchkin cookie value used to associate new lead with anonymous activities.  e.g. id:123-XYZ-456&token:_mch-marketo.com-1594662481190-60776"
          }
        },
        "description": "Form field data.  May have any number of fields depending on the fields available in the form."
      },
      "LeadFormFields": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address used as primary key during lead upsert"
          }
        },
        "description": "Form fields.  Always contains email, but may have any number of other fields depending on the fields available in the form."
      },
      "VisitorData": {
        "type": "object",
        "properties": {
          "pageURL": {
            "type": "string",
            "description": "Web page that hosts the form.  Must be a fully formed URL"
          },
          "queryString": {
            "type": "string",
            "description": "Web page query string.  Contains one or more ampersand delimited key=value pairs"
          },
          "leadClientIpAddress": {
            "type": "string",
            "description": "Client IP address.  IPv4 format.  Used to populate inferred fields on upserted lead record."
          },
          "userAgentString": {
            "type": "string",
            "description": "User agent of browser hosting the form"
          }
        },
        "description": "Page visit related data.  Used to populate additional activity fields for filtering and triggering."
      },
      "ChangeLeadProgramStatusOutputData": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of a lead record"
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          },
          "status": {
            "type": "string",
            "description": "Program status of the record.  Permissible values can be retrieve from the Get Channel by Name API for the designated program's channel"
          }
        }
      },
      "LeadChangeField": {
        "type": "object",
        "required": [
          "id",
          "name",
          "newValue"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of the change record"
          },
          "name": {
            "type": "string",
            "description": "Name of the field which was changed"
          },
          "newValue": {
            "type": "string",
            "description": "New value after the change"
          },
          "oldValue": {
            "type": "string",
            "description": "Old value before the change"
          }
        },
        "description": "Activity record containing information on a data value change"
      },
      "CustomActivityTypeAttribute": {
        "type": "object",
        "required": [
          "apiName",
          "name"
        ],
        "properties": {
          "apiName": {
            "type": "string",
            "description": "API Name of the attribute"
          },
          "dataType": {
            "type": "string",
            "description": "Data type of the attribute",
            "enum": [
              "string",
              "boolean",
              "integer",
              "float",
              "link",
              "email",
              "currency",
              "date",
              "datetime",
              "phone",
              "text"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the attribute"
          },
          "isPrimary": {
            "type": "boolean",
            "example": false,
            "description": "Whether the attribute is the primary attribute of the activity type.  There may only be one primary attribute at a time"
          },
          "name": {
            "type": "string",
            "description": "Human-readable display name of the attribute"
          }
        }
      },
      "ResponseOfActivityType": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ActivityType"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "UserCount": {
        "type": "object",
        "required": [
          "count",
          "userId"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of calls made in the time period"
          },
          "userId": {
            "type": "string",
            "description": "Id of the user"
          }
        }
      },
      "InputStreamContent": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string"
          },
          "inputStream": {
            "$ref": "#/definitions/InputStream"
          }
        }
      },
      "SyncCompanyRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "action": {
            "type": "string",
            "description": "Type of sync operation to perform",
            "enum": [
              "createOnly",
              "updateOnly",
              "createOrUpdate"
            ]
          },
          "dedupeBy": {
            "type": "string",
            "description": "Field to deduplicate on.  If the value in the field for a given record is not unique, an error will be returned for the individual record."
          },
          "input": {
            "type": "array",
            "description": "List of input records. Each 'Company' object contains a 'searchableField' for lookup purposes, and one or more 'fields' to create or update.  Both can be retrieved using the Describe Companies endpoint",
            "items": {
              "$ref": "#/definitions/Company"
            }
          }
        }
      },
      "ResponseOfSalesPerson": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/SalesPerson"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ProgramMembership": {
        "type": "object",
        "required": [
          "membershipDate",
          "progressionStatus"
        ],
        "properties": {
          "acquiredBy": {
            "type": "boolean",
            "example": false,
            "description": "Whether the lead was acquired by the parent program"
          },
          "isExhausted": {
            "type": "boolean",
            "example": false,
            "description": "Whether the lead is currently exhausted in the stream, if applicable"
          },
          "membershipDate": {
            "type": "string",
            "description": "Date the lead first became a member of the program"
          },
          "nurtureCadence": {
            "type": "string",
            "description": "Cadence of the parent stream if applicable"
          },
          "progressionStatus": {
            "type": "string",
            "description": "Program status of the lead in the parent program"
          },
          "reachedSuccess": {
            "type": "boolean",
            "example": false,
            "description": "Whether the lead is in a success-status in the parent program"
          },
          "stream": {
            "type": "string",
            "description": "Stream that the lead is a member of, if the parent program is an engagement program"
          }
        }
      },
      "Program": {
        "type": "object",
        "required": [
          "id",
          "progressionStatus",
          "isExhausted",
          "acquiredBy",
          "reachedSuccess",
          "membershipDate",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of a program record"
          },
          "acquiredBy": {
            "type": "boolean",
            "example": false,
            "description": "Whether the lead was acquired by the parent program"
          },
          "isExhausted": {
            "type": "boolean",
            "example": false,
            "description": "Whether the lead is currently exhausted in the stream, if applicable"
          },
          "membershipDate": {
            "type": "string",
            "description": "Date the lead first became a member of the program"
          },
          "nurtureCadence": {
            "type": "string",
            "description": "Cadence of the parent stream if applicable"
          },
          "progressionStatus": {
            "type": "string",
            "description": "Program status of the lead in the parent program"
          },
          "reachedSuccess": {
            "type": "boolean",
            "example": false,
            "description": "Whether the lead is in a success-status in the parent program"
          },
          "stream": {
            "type": "string",
            "description": "Stream that the lead is a member of, if the parent program is an engagement program"
          },
          "updatedAt": {
            "type": "string",
            "description": "Datetime when the program was most recently updated"
          }
        }
      },
      "RelatedObject": {
        "type": "object",
        "required": [
          "field",
          "name"
        ],
        "properties": {
          "field": {
            "type": "string",
            "description": "Name of link field (within link object)"
          },
          "name": {
            "type": "string",
            "description": "Name of the link object"
          }
        }
      },
      "ResponseOfLeadChange": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/LeadChange"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ExportResponse": {
        "type": "object",
        "required": [
          "exportId",
          "status"
        ],
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the export request was created"
          },
          "errorMsg": {
            "type": "string",
            "description": "Error message in case of \"Failed\" status"
          },
          "exportId": {
            "type": "string",
            "description": "Unique id of the export job"
          },
          "fileSize": {
            "type": "integer",
            "format": "int64",
            "description": "Size of exported file in bytes. This will have a value only when status is \"Completed\", otherwise null"
          },
          "fileChecksum": {
            "type": "string",
            "description": "SHA-256 hash of exported file. This will have a value only when status is \"Completed\", otherwise null"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Finish time of export job. This will have value only when status is \"Completed\" or \"Failed\", otherwise null"
          },
          "format": {
            "type": "string",
            "description": "Format of file as given in the request (\"CSV\", \"TSV\", \"SSV\")"
          },
          "numberOfRecords": {
            "type": "integer",
            "format": "int64",
            "description": "Number of records in the export file.  This will have value only when status is \"Completed\", otherwise null"
          },
          "queuedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Queue time of export job. This will have value when \"Queued\" status is reached, before that null"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Start time of export job. This will have value when \"Processing\" status is reached, before that null"
          },
          "status": {
            "type": "string",
            "description": "Status of the export job (\"Created\",\"Queued\",\"Processing\",\"Canceled\",\"Completed\",\"Failed\")"
          }
        },
        "description": "Response containing export job status information"
      },
      "ResponseOfCustomActivity": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/CustomActivity"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "LookupCustomObjectRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "batchSize": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of records to return in the response.  Max and default is 300"
          },
          "fields": {
            "type": "array",
            "description": "List of fields to return. If not specified, will return the following fields: marketoGuid, dedupeFields, updatedAt, createdAt, filterType",
            "items": {
              "type": "string"
            }
          },
          "filterType": {
            "type": "string",
            "description": "Field to search on.  Valid values are: dedupeFields, idFields, and any field defined in searchableFields attribute of Describe endpoint.  Default is dedupeFields"
          },
          "input": {
            "type": "array",
            "description": "Search values when using a compound key.  Each element must include each of the fields in the compound key.  Compound keys are determined by the contents of \"dedupeFields\" in the Describe result for the object",
            "items": {
              "$ref": "#/definitions/CustomObject"
            }
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token returned from a previous response"
          }
        }
      },
      "CompanyResponse": {
        "type": "object",
        "required": [
          "id",
          "seq"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of the company record"
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          },
          "seq": {
            "type": "integer",
            "format": "int32",
            "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
          },
          "status": {
            "type": "string",
            "description": "Status of the operation performed on the record",
            "enum": [
              "created",
              "updated",
              "deleted",
              "skipped",
              "added",
              "removed"
            ]
          }
        },
        "description": "Company record.  May include any additional fields listed in the corresponding describe method"
      },
      "Company": {
        "type": "object",
        "description": "Company record.  May include any additional 'fields' listed in the Describe Companies endpoint",
        "properties": {
          "externalCompanyId": {
            "type": "string",
            "description": "Unique id of the company record"
          },
          "id": {
            "type": "integer",
            "description": "Unique integer id of the company record"
          },
          "company": {
            "type": "string",
            "description": "Unique name of the company record"
          }
        }
      },
      "Reason": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Integer code of the reason"
          },
          "message": {
            "type": "string",
            "description": "Message describing the reason for the status of the operation"
          }
        }
      },
      "FileRange": {
        "type": "object",
        "properties": {
          "end": {
            "type": "integer",
            "format": "int64"
          },
          "start": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ObservableOfInputStreamContent": {
        "type": "object"
      },
      "ErrorCount": {
        "type": "object",
        "required": [
          "count",
          "errorCode"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of occurences of the error"
          },
          "errorCode": {
            "type": "string",
            "description": "Integer error code of the error"
          }
        }
      },
      "LeadMapAttribute": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the attribute"
          },
          "readOnly": {
            "type": "boolean",
            "example": false,
            "description": "Whether the attribute is read only"
          }
        }
      },
      "LeadLookupInputData": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of a lead record"
          }
        }
      },
      "SalesPerson": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique integer id of the salesperson record"
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          },
          "seq": {
            "type": "integer",
            "format": "int32",
            "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
          },
          "status": {
            "type": "string",
            "description": "Status of the operation performed on the record",
            "enum": [
              "created",
              "updated",
              "deleted",
              "skipped",
              "added",
              "removed"
            ]
          }
        }
      },
      "RemoveNamedAccountListMemberRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/NamedAccount"
            }
          }
        }
      },
      "Token": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the token.  Should be formatted as \"{{my.name}}\""
          },
          "value": {
            "type": "string",
            "description": "Value of the token"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code of the error.  See full list of error codes <a href=\"https://developers.marketo.com/rest-api/error-codes/\">here</a>"
          },
          "message": {
            "type": "string",
            "description": "Message describing the cause of the error"
          }
        }
      },
      "ExportLeadFilter": {
        "type": "object",
        "required": [
          "createdAt",
          "smartListId",
          "smartListName",
          "staticListId",
          "staticListName",
          "updatedAt"
        ],
        "properties": {
          "createdAt": {
            "description": "Date range to filter new leads on - START AND END MUST BE LESS THAN OR EQUAL TO 30 DAYS",
            "$ref": "#/definitions/DateRange"
          },
          "smartListId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of smart list to retrieve leads from"
          },
          "smartListName": {
            "type": "string",
            "description": "Name of smart list to retrieve leads from"
          },
          "staticListId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of static list to retrieve leads from",
            "example": 1234
          },
          "staticListName": {
            "type": "string",
            "description": "Name of static list to retrieve leads from",
            "example": "database_name"
          },
          "updatedAt": {
            "description": "Date range to filter updated leads on - START AND END MUST BE LESS THAN OR EQUAL TO 30 DAYS",
            "$ref": "#/definitions/DateRange"
          }
        }
      },
      "ExportCustomObjectFilter": {
        "type": "object",
        "required": [
          "updatedAt",
          "smartListId",
          "smartListName",
          "staticListId",
          "staticListName"
        ],
        "properties": {
          "updatedAt": {
            "description": "Date range to filter updated custom objects on",
            "$ref": "#/definitions/DateRange"
          },
          "smartListId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of smart list to retrieve leads from"
          },
          "smartListName": {
            "type": "string",
            "description": "Name of smart list to retrieve leads from"
          },
          "staticListId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of static list to retrieve leads from"
          },
          "staticListName": {
            "type": "string",
            "description": "Name of static list to retrieve leads from"
          }
        }
      },
      "ExportProgramMemberFilter": {
        "type": "object",
        "required": [
          "programId"
        ],
        "properties": {
          "programId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of program to retrieve members from"
          }
        }
      },
      "InputStreamRangeContent": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string"
          },
          "fileRange": {
            "$ref": "#/definitions/FileRange"
          },
          "inputStream": {
            "$ref": "#/definitions/InputStream"
          },
          "length": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeleteCompanyRequest": {
        "type": "object",
        "properties": {
          "deleteBy": {
            "type": "string",
            "description": "Field to delete company records by.  Key may be \"dedupeFields\" or \"idField\""
          },
          "input": {
            "type": "array",
            "description": "List of company objects. Companies in the list should only contain a member matching the dedupeBy value. Each 'Company' object contains a 'searchableField' for lookup purposes which can be retrieved using the Describe Companies endpoint",
            "items": {
              "$ref": "#/definitions/Company"
            }
          }
        }
      },
      "ResponseOfImportCustomObjectResponse": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "moreResult": {
            "type": "boolean",
            "example": false,
            "description": "Boolean indicating if there are more results in subsequent pages"
          },
          "nextPageToken": {
            "type": "string",
            "description": "Paging token given if the result set exceeded the allowed batch size"
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ImportCustomObjectResponse"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "ResponseOfImportProgramMemberResponse": {
        "type": "object",
        "required": [
          "errors",
          "requestId",
          "result",
          "success",
          "warnings"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "requestId": {
            "type": "string",
            "description": "Id of the request made"
          },
          "result": {
            "type": "array",
            "description": "Array of results for individual records in the operation, may be empty",
            "items": {
              "$ref": "#/definitions/ImportProgramMemberResponse"
            }
          },
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Whether the request succeeded"
          },
          "warnings": {
            "type": "array",
            "description": "Array of warnings given for the operation",
            "items": {
              "$ref": "#/definitions/Warning"
            }
          }
        }
      },
      "CustomObject": {
        "type": "object",
        "required": [
          "marketoGUID",
          "seq"
        ],
        "properties": {
          "marketoGUID": {
            "type": "string",
            "description": "Unique GUID of the custom object records"
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          },
          "seq": {
            "type": "integer",
            "format": "int32",
            "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
          }
        }
      },
      "ProgramMemberStatusResponse": {
        "type": "object",
        "required": [
          "status",
          "leadId",
          "seq"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the operation performed on the record",
            "enum": [
              "updated",
              "skipped"
            ]
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          },
          "leadId": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the lead associated to the program member"
          },
          "seq": {
            "type": "integer",
            "format": "int32",
            "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
          }
        }
      },
      "ProgramMemberDataResponse": {
        "type": "object",
        "required": [
          "status",
          "leadId",
          "seq"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the operation performed on the record",
            "enum": [
              "created",
              "updated",
              "skipped"
            ]
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          },
          "leadId": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the lead associated to the program member"
          },
          "seq": {
            "type": "integer",
            "format": "int32",
            "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
          }
        }
      },
      "ProgramMemberDeleteResponse": {
        "type": "object",
        "required": [
          "status",
          "leadId",
          "seq"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the operation performed on the record",
            "enum": [
              "deleted",
              "skipped"
            ]
          },
          "reasons": {
            "type": "array",
            "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
            "items": {
              "$ref": "#/definitions/Reason"
            }
          },
          "leadId": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the lead associated to the program member"
          },
          "seq": {
            "type": "integer",
            "format": "int32",
            "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
          }
        }
      },
      "ExportActivityRequest": {
        "type": "object",
        "required": [
          "fields",
          "filter"
        ],
        "properties": {
          "columnHeaderNames": {
            "description": "File header field names override (corresponds with REST API name)",
            "$ref": "#/definitions/ColumnHeaderNames"
          },
          "fields": {
            "type": "array",
            "description": "Array of strings containing field values.  Used to reduce the number of fields contained in export file.  Select one or more of: marketoGUID, leadId, activityDate, activityTypeId, campaignId, primaryAttributeValueId, primaryAttributeValue, actionResult",
            "items": {
              "type": "string"
            }
          },
          "filter": {
            "description": "Record selection criteria. \"createAt\" is required, \"activityTypeIds\", \"primaryAttributeValueIds\", and \"primaryAttributeValues\" are optional",
            "$ref": "#/definitions/ExportActivityFilter"
          },
          "format": {
            "type": "string",
            "description": "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is \"CSV\""
          }
        }
      },
      "UsageData": {
        "type": "object",
        "required": [
          "date"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the collected calls"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of errors in the time period"
          },
          "users": {
            "type": "array",
            "description": "Counts for individual users",
            "items": {
              "$ref": "#/definitions/UserCount"
            }
          }
        }
      },
      "ErrorsData": {
        "type": "object",
        "required": [
          "date"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the collected calls"
          },
          "errors": {
            "type": "array",
            "description": "Counts for individual error codes",
            "items": {
              "$ref": "#/definitions/ErrorCount"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of errors in the time period"
          }
        }
      },
      "StaticList": {
        "type": "object",
        "required": [
          "createdAt",
          "id",
          "name",
          "updatedAt"
        ],
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Datetime when the list was created"
          },
          "description": {
            "type": "string",
            "description": "Description of the static list"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of the static list"
          },
          "name": {
            "type": "string",
            "description": "Name of the static list"
          },
          "programName": {
            "type": "string",
            "description": "Name of the program"
          },
          "updatedAt": {
            "type": "string",
            "description": "Datetime when the list was most recently updated"
          },
          "workspaceName": {
            "type": "string",
            "description": "Name of the parent workspace, if applicable"
          }
        }
      },
      "List": {
        "type": "object",
        "required": [
          "createdAt",
          "listId",
          "updatedAt"
        ],
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Datetime when the static list was created"
          },
          "listId": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of the static list"
          },
          "updatedAt": {
            "type": "string",
            "description": "Datetime when the static list was most recently updated"
          }
        }
      },
      "SmartCampaign": {
        "type": "object",
        "required": [
          "createdAt",
          "smartCampaignId",
          "updatedAt"
        ],
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Datetime when the smart campaign was created"
          },
          "smartCampaignId": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of the smart campaign"
          },
          "updatedAt": {
            "type": "string",
            "description": "Datetime when the smart campaign was most recently updated"
          }
        }
      },
      "CustomActivity": {
        "type": "object",
        "required": [
          "activityDate",
          "activityTypeId",
          "attributes",
          "errors",
          "id",
          "leadId",
          "primaryAttributeValue"
        ],
        "properties": {
          "activityDate": {
            "type": "string",
            "description": "Datetime of the activity"
          },
          "activityTypeId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the activity type"
          },
          "apiName": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "description": "List of secondary attributes",
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "errors": {
            "type": "array",
            "description": "Array of errors that occurred if the request was unsuccessful",
            "items": {
              "$ref": "#/definitions/Error"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Integer id of the activity.  For instances which have been migrated to Activity Service, this field may not be present, and should not be treated as unique."
          },
          "leadId": {
            "type": "integer",
            "format": "int64",
            "description": "Id of the lead associated to the activity"
          },
          "marketoGUID": {
            "type": "string",
            "description": "Unique id of the activity (128 character string)"
          },
          "primaryAttributeValue": {
            "type": "string",
            "description": "Value of the primary attribute"
          },
          "status": {
            "type": "string",
            "description": "Status of the operation performed on the record",
            "enum": [
              "created",
              "updated",
              "deleted",
              "skipped",
              "added",
              "removed"
            ]
          }
        }
      },
      "SyncNamedAccountListRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "action": {
            "type": "string",
            "description": "Type of sync operation to perform",
            "enum": [
              "createOnly",
              "updateOnly"
            ]
          },
          "dedupeBy": {
            "type": "string",
            "description": "Field to deduplicate on.  If the value in the field for a given record is not unique, an error will be returned for the individual record."
          },
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/NamedAccountList"
            }
          }
        }
      },
      "ScheduleCampaignData": {
        "type": "object",
        "properties": {
          "cloneToProgramName": {
            "type": "string",
            "description": "Name of the resulting program.  When set, this attribute will cause the campaign, parent program, and all of its assets, to be created with the resulting new name.  The parent program will be cloned and the newly created campaign will be scheduled.  The resulting program is created underneath the parent.  Programs with snippets, push notifications, in-app messages, static lists, reports, and social assets may not be cloned in this way"
          },
          "runAt": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime to run the campaign at.  If unset, the campaign will be run five minutes after the call is made"
          },
          "tokens": {
            "type": "array",
            "description": "List of my tokens to replace during the run of the target campaign.  The tokens must be available in a parent program or folder to be replaced during the run",
            "items": {
              "$ref": "#/definitions/Token"
            }
          }
        }
      },
      "ObjectField": {
        "type": "object",
        "properties": {
          "dataType": {
            "type": "string",
            "description": "Datatype of the field"
          },
          "displayName": {
            "type": "string",
            "description": "UI display-name of the field"
          },
          "length": {
            "type": "integer",
            "format": "int32",
            "description": "Max length of the field.  Only applicable to text, string, and text area."
          },
          "name": {
            "type": "string",
            "description": "Name of the field"
          },
          "updateable": {
            "type": "boolean",
            "example": false,
            "description": "Whether the field is updateable"
          },
          "crmManaged": {
            "type": "boolean",
            "example": false,
            "description": "Whether the field is managed by CRM (native sync)"
          }
        }
      },
      "ColumnHeaderNames": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "REST API name for header field"
          },
          "value": {
            "type": "string",
            "description": "Value for header field"
          }
        }
      },
      "DeleteCustomObjectRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "deleteBy": {
            "type": "string",
            "description": "Field to delete records by.  Permissible values are idField or dedupeFields as indicated by the result of the corresponding describe record"
          },
          "input": {
            "type": "array",
            "description": "List of input records",
            "items": {
              "$ref": "#/definitions/CustomObject"
            }
          }
        }
      },
      "UpdateLeadPartitionRequest": {
        "type": "object",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "array",
            "description": "List of leads for input",
            "items": {
              "$ref": "#/definitions/UpdateLeadPartition"
            }
          }
        }
      },
      "UpdateLeadPartition": {
        "type": "object",
        "required": [
          "id",
          "partitionName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique integer id of a lead record"
          },
          "partitionName": {
            "type": "string",
            "description": "Name of the partition"
          }
        }
      },
      "requestToken": {
        "type": "object",
        "required": [
          "client_id",
          "client_secret",
          "grant_type"
        ],
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "grant_type": {
            "type": "string",
            "enum": [
              "client_credentials"
            ]
          }
        },
        "xml": {
          "name": "Export"
        }
      }
    }
  }